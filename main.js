!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._handleCardClick=s,this._cardSelector=t}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteIcon()})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleLikeIcon(){this._cardElement.querySelector(".cards__like-button").classList.toggle("cards__like-button_active")}_handleDeleteIcon(){this._cardElement.remove()}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__content").cloneNode(!0),this._cardElement.querySelector(".cards__image").src=this._link,this._cardElement.querySelector(".cards__title").innerText=this._name,this._cardElement.querySelector(".cards__image").alt=this._name,this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._formElement.addEventListener("reset",(()=>{this._toggleButtonState()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal__close-button")||e.target.classList.contains("modal_opened"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._values={},this._inputList.forEach((e=>{this._values[e.name]=e.value})),this._values}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=document.querySelector("#profile-edit-modal"),o=i.querySelector("#profile-edit-form"),l=document.querySelector("#add-card-modal").querySelector("#add-card-form"),a=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__title",jobSelector:".profile__description"}),c=new n("#profile-edit-modal",(function(e){a.setUserInfo(e),c.close()}));c.setEventListeners();const u=new n("#add-card-modal",(function(e){return v({name:e.title,link:e.link})}));u.setEventListeners();const d=new class extends s{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._previewTitle=this._popupElement.querySelector(".modal__preview-title")}open(e,t){this._previewImage.src=t,this._previewImage.alt=e,this._previewTitle.textContent=e,super.open()}}("#preview-image-modal");d.setEventListeners();const _=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._containerElement=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._containerElement.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:v},"#cards__list");_.renderItems();const m=document.querySelector("#profile-edit-btn"),p=(i.querySelector(".modal__close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),h=document.querySelector("#profile-description-input"),E=document.querySelector(".profile__add-button");function v(t){const s=new e(t,"#card-template",S).getView();_.addItem(s)}function S(e,t){d.open(e,t)}m.addEventListener("click",(()=>{const e=a.getUserInfo();p.value=e.name,h.value=e.job,f.resetValidation(),c.open()})),E.addEventListener("click",(()=>{g.resetValidation(),u.open()}));const f=new t(r,o);f.enableValidation();const g=new t(r,l);g.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,